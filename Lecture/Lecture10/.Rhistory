1 + 1
1 + 1
1 + 1
1 + 1
1 + 1 + 1
------------------ NOTES ---------------------------
#  - Can make keyboard shortcuts under tools (command + enter is run)
#  - Can ru
clear
# --------------------------- NOTES ---------------------------
#  - Can make keyboard shortcuts under tools (command + enter is run)
#  - Can run something by just highlighting it, also runs where cursor is
clear
1 + 1
c(1,4,8)
1 + 1
mean(vector1)
vector1 = c(1,4,8)      # Stores value in vector1
mean(x = vector1) #use x = vector1 to say the argument x is equal to vector 1
c(1,4,8)                # This will make a vector of 1 4 8 together
mean(x = vector1) #use x = vector1 to say the argument x is equal to vector 1
mean(vector1)     # We don't need to label argumets as long as they are in order
mean(x = student.sleep, na.rm = TRUE)  # Optional argument to avoid NA numbers
student.sleep <- c(1, 4, 8, NA)
mean(x = student.sleep, na.rm = TRUE)  # Optional argument to avoid NA numbers
student.sleep <- c(1, 4, 8, NA)
mean(x = student.sleep)   # this outputs NA! Can't add NA
mean(x = student.sleep, na.rm = TRUE)  # Optional argument to avoid NA numbers
? mean()
hello
install.packages("ggplot2")
install.packages("ggplot2")
library("ggplot2")
View(diamonds)
ggplot(data = diamods)
diamonds
ggplot(data = diamods)
ggplot(data = diamonds)
ggplot(data = diamond) +                  # Make canvas
geom_point(aes(x = carat, y = price))   # Make plot graph with x and y
ggplot(data = diamonds) +                  # Make canvas
geom_point(aes(x = carat, y = price))   # Make plot graph with x and y
ggplot(data = diamonds) +                  # Make canvas
geom_point(aes(x = carat, y = price))    # Make plot graph with x and y
library("ggplot2")     # makes pretty graphs rather than base R which is ugly
library("ggplot2")     # makes pretty graphs rather than base R which is ugly
ggplot(data = diamonds) +                  # Make canvas
geom_point(aes(x = carat, y = price))    # Make plot graph with x and y
ggplot(data = diamonds) +                  # Make canvas
geom_point(aes(x = carat, y = price))    # Make plot graph with x and y
ggplot(data = diamonds) +                    # Make canvas
geom_point(aes(x = carat, y = price)) +    # Make plot graph with x and y
theme_dark()                               # Spice it up a bit
ggplot(data = diamonds) +                    # Make canvas
geom_point(aes(x = carat, y = price)) +    # Make plot graph with x and y
theme_dark()                               # Spice it up a bit
ggplot(data = diamonds) +                         # Make canvas
geom_point(mapping = aes(x = carat, y = price), # Make plot graph with x and y
color = "blue",                      # Can color points
size = 4) +                          # Can change size of points
theme_dark()                                    # Spice it up a bit
library("tidyverse")
library("dplyr")
library("tidytext")
library("tidyr")
library("rvest")
setwd("~/Desktop/NSCI Data Science/Lecture/Lecture8")
life <- read_csv("life_expectancy_years.csv")
income <- read_csv("income.csv")
# LIFE EXPECTANCY DATA
life.long <- life %>%
pivot_longer(-country,
names_to = "Year",
values_to = "LifeExpectancy") %>%
mutate(Year = as.numeric(Year)) %>%
filter(Year < 2022)
# INCOME DATA
income.long <- income %>%
mutate(across(.cols = -country,
.fns= ~as.numeric(str_replace(.x, "k", "e3")))) %>%
pivot_longer(-country,
names_to = "Year",
values_to = "Income") %>%
mutate(Year = as.numeric(Year)) %>%
filter(Year < 2022)
# JOIN INCOME AND LIFE EXPECTANCY
joined.data <- income.long %>%
inner_join(life.long, by = c("country", "Year"))
# REGION DATA
url <- "https://meta.wikimedia.org/wiki/List_of_countries_by_regional_classification"
region.data <- url %>%
read_html() %>%
html_element("table") %>%
html_table()
# JOIN REGION, INCOME & LIFE EXPECTANCY
joined.region.data <- joined.data %>%
left_join(region.data, by = c("country" = "Country"))
joined.region.data <- joined.data %>%
anti_join(region.data, by = c("country" = "Country")) %>%
filter(Year == 2000)
# ---------------------------- NEW NOTES ---------------------------------
pop <- read_csv("population_total.csv")
pop.long <- pop %>%
mutate(across(.cols = -country,
.fns = ~str_replace(.x, "k", "e3"))) %>%
mutate(across(.cols = -country,
.fns = ~str_replace(.x, "M", "e6"))) %>%
mutate(across(.cols = -country,
.fns = ~as.numeric(str_replace(.x, "B", "e9")))) %>%
pivot_longer(-country,
names_to = "Year",
values_to = "pop") %>%
mutate(Year = as.numeric(Year)) %>%
filter(Year < 2022)
final.joined.data <- joined.region.data %>%
inner_join(pop.long)
library("gganimate")
library("gifski")
library("av")
library("pg")
graph1 <- final.joined.data %>%
#filter(Year == 2000) %>%
ggplot() +
geom_point(aes(x = Income, y = LifeExpectancy, color = Region, size = pop)) +
scale_x_log10() +
theme_bw() +
transition_time(Year) +
labs(title = "Year: {frame_time}")
animation1 <- animate(graph1, nframes = 223)
final.joined.data
# REGION DATA
url <- "https://meta.wikimedia.org/wiki/List_of_countries_by_regional_classification"
region.data <- url %>%
read_html() %>%
html_element("table") %>%
html_table()
# JOIN REGION, INCOME & LIFE EXPECTANCY
joined.region.data <- joined.data %>%
left_join(region.data, by = c("country" = "Country"))
joined.region.data <- joined.data %>%
anti_join(region.data, by = c("country" = "Country")) %>%
filter(Year == 2000)
pop <- read_csv("population_total.csv")
pop.long <- pop %>%
mutate(across(.cols = -country,
.fns = ~str_replace(.x, "k", "e3"))) %>%
mutate(across(.cols = -country,
.fns = ~str_replace(.x, "M", "e6"))) %>%
mutate(across(.cols = -country,
.fns = ~as.numeric(str_replace(.x, "B", "e9")))) %>%
pivot_longer(-country,
names_to = "Year",
values_to = "pop") %>%
mutate(Year = as.numeric(Year)) %>%
filter(Year < 2022)
final.joined.data <- joined.region.data %>%
inner_join(pop.long)
graph1 <- final.joined.data %>%
#filter(Year == 2000) %>%
ggplot() +
geom_point(aes(x = Income, y = LifeExpectancy, color = Region, size = pop)) +
scale_x_log10() +
theme_bw() +
transition_time(Year) +
labs(title = "Year: {frame_time}")
animation1 <- animate(graph1, nframes = 223)
final.joined.data
url <- "https://meta.wikimedia.org/wiki/List_of_countries_by_regional_classification"
region.data <- url %>%
read_html() %>%
html_element("table") %>%
html_table()
# JOIN REGION, INCOME & LIFE EXPECTANCY
joined.region.data <- joined.data %>%
left_join(region.data, by = c("country" = "Country"))
joined.region.data <- joined.data %>%
anti_join(region.data, by = c("country" = "Country")) %>%
filter(Year == 2000)
joined.region.data
region.data
joined.region.data
install.packages("rayshader")
library("rayshader")
plot_gg(diamonds.graph1)
diamonds.graph1 <- diamonds %>%
ggplot() +
geom_hex(aes(x = carat, y = price)) +
scale_fill_viridis_c() +
theme_bw()
plot_gg(diamonds.graph1)
install.packages("fivethirtyeight")
library("fivethirtyeight")
diamonds %>%
ggplot() +
geom_point(aes(x = carat, y = price, color = color)) +
transition_states(color, state_length = 1, transition_length = 1) +
enter_fade() +
exit_fade()
graph1 <- final.joined.data %>%
#filter(Year == 2000) %>%
ggplot() +
geom_point(aes(x = Income, y = LifeExpectancy, color = Region, size = pop)) +
scale_x_log10() +
theme_bw() +
transition_time(Year) +
labs(title = "Year: {frame_time}")
animation1 <- animate(graph1, nframes = 223)
url <- "https://meta.wikimedia.org/wiki/List_of_countries_by_regional_classification"
region.data <- url %>%
read_html() %>%
html_element("table") %>%
html_table()
region.data
joined.region.data <- joined.data %>%
anti_join(region.data, by = c("country" = "Country")) %>%
filter(Year == 2000)
joined.region.data
joined.data
joined.region.data <- joined.data %>%
left_join(region.data, by = c("country" = "Country"))
joined.region.data
joined.region.data <- joined.data %>%
left_join(region.data, by = c("country" = "Country"))
pop <- read_csv("population_total.csv")
pop.long <- pop %>%
mutate(across(.cols = -country,
.fns = ~str_replace(.x, "k", "e3"))) %>%
mutate(across(.cols = -country,
.fns = ~str_replace(.x, "M", "e6"))) %>%
mutate(across(.cols = -country,
.fns = ~as.numeric(str_replace(.x, "B", "e9")))) %>%
pivot_longer(-country,
names_to = "Year",
values_to = "pop") %>%
mutate(Year = as.numeric(Year)) %>%
filter(Year < 2022)
final.joined.data <- joined.region.data %>%
inner_join(pop.long)
final.joined.data
graph1 <- final.joined.data %>%
#filter(Year == 2000) %>%
ggplot() +
geom_point(aes(x = Income, y = LifeExpectancy, color = Region, size = pop)) +
scale_x_log10() +
theme_bw() +
transition_time(Year) +
labs(title = "Year: {frame_time}")
animation1 <- animate(graph1, nframes = 223)
bechdel
animation1
final.joined.data %>%
filter(country %in% c("Canada", "China", "Angola")) %>%
ggplot() +
geom_line(aes(x = Year, y = Income, color = country),
size = 2) +
theme_bw() +
transition_reveal(Year)
graph2 <- final.joined.data %>%
filter(country %in% c("Canada", "China", "Angola")) %>%
ggplot() +
geom_line(aes(x = Year, y = Income, color = country),
size = 2) +
theme_bw() +
transition_reveal(Year)
graph2
graph2
?animate()
animation2 <- animate(graph2)
animation2
View(bechdel)
bechdel.filtered <- bechdel %>%
filter(c("year", "binary"))
?filter()
bechdel.filtered <- bechdel[,c("year","binary")]
View(bechdel.filtered)
bechdel.final <- bechdel.filtered %>%
group_by(Year) %>%
summarise(count = n())
bechdel.final <- bechdel.filtered %>%
group_by(year) %>%
summarise(count = n())
bechdel.final
?n()
bechdel.final <- bechdel.filtered %>%
group_by(year) %>%
count(distinct(year, binary), year, binary, name = 'moviesPerYear')
bechdel.final <- bechdel.filtered %>%
group_by(year) %>%
summarize(prop = mean(binary, na.rm = TRUE))
bechdel.final
bechdel.filtered
bechdel.final <- bechdel.filtered %>%
group_by(year)
bechdel.final
bechdel.final <- bechdel.filtered %>%
group_by(year) %>%
str_replace_all("FAIL", "FALSE") %>%
str_replace_all("PASS", "TRUE") %>%
summarize(prop = mean(binary, na.rm = TRUE))
bechdel.final <- bechdel.filtered %>%
group_by(year) %>%
str_replace_all("FAIL", "FALSE") %>%
str_replace_all("PASS", "TRUE")
bechdel.final
bechdel.final <- bechdel.filtered %>%
group_by(year) %>%
mutate(binary = str_replace_all(binary, "FAIL", "FALSE") )%>%
mutate(binary = str_replace_all(binary, "PASS", "TRUE")) %>%
summarize(prop = mean(binary, na.rm = TRUE))
bechdel.final
bechdel.final <- bechdel.filtered %>%
group_by(year) %>%
mutate(binary = str_replace(binary, "FAIL", "FALSE") )%>%
mutate(binary = str_replace(binary, "PASS", "TRUE")) %>%
summarize(prop = mean(binary, na.rm = TRUE))
bechdel.final <- bechdel.filtered %>%
group_by(year) %>%
mutate(binary = str_replace(binary, "FAIL", "FALSE") )%>%
mutate(binary = str_replace(binary, "PASS", "TRUE"))
bechdel.final
bechdel.final <- bechdel.filtered %>%
mutate(binary = str_replace(binary, "FAIL", "FALSE") )%>%
mutate(binary = str_replace(binary, "PASS", "TRUE")) %>%
group_by(year) %>%
summarize(prop = mean(binary, na.rm = TRUE))
bechdel.final
bechdel.final <- bechdel.filtered %>%
mutate(binary = str_replace(binary, "FAIL", FALSE) )%>%
mutate(binary = str_replace(binary, "PASS", TRUE)) %>%
group_by(year) %>%
summarize(prop = mean(binary, na.rm = TRUE))
?as.logical()
as.logical?
d
?as.logical
bechdel.final <- bechdel.filtered %>%
mutate(as.logical(binary = str_replace(binary, "FAIL", "FALSE")) )%>%
mutate(as.logical(binary = str_replace(binary, "PASS", "TRUE")) )%>%
group_by(year) %>%
summarize(prop = mean(binary, na.rm = TRUE))
bechel %>%
mutate(decade = str_sub(year, start = 1, end = 3))  %>%
ggplot() +
geom_bar(aes(x = decade, fill = binary),
fill=  "fill")
bechdel %>%
mutate(decade = str_sub(year, start = 1, end = 3))  %>%
ggplot() +
geom_bar(aes(x = decade, fill = binary),
fill=  "fill")
# For all years?
bechdel %>%
mutate(decade = str_sub(year, start = 1, end = 3))  %>%
ggplot() +
geom_bar(aes(x = decade, fill = binary),
position =  "fill")
# For all years?
bechdel %>%
mutate(decade = str_sub(year, start = 1, end = 3))  %>%
ggplot() +
geom_bar(aes(x = decade, fill = binary),
position =  "fill")
# For all years?
bechdel %>%
mutate(decade = str_sub(year, start = 1, end = 3))  %>%
ggplot() +
geom_bar(aes(x = decade, fill = binary),
position =  "fill")
bechdel %>%
filter(year == 2000) %>%
ggplot() +
geom_bar(aes = binary)
bechdel
# Visualize clean test in a given year?
bechdel %>%
filter(year == 2000) %>%
ggplot() +
geom_bar(aes( x = binary))
echdel %>%
filter(year == 2000) %>%
ggplot() +
geom_bar(aes( x = binary))
bechdel %>%
filter(year == 2000) %>%
ggplot() +
geom_bar(aes( x = binary))
bechdel.graph1 <- bechdel %>%
filter(year == 2000) %>%
ggplot() +
geom_bar(aes( x = binary))
bechdel.graph1
animation2 <- animate(graph2)
animation2
bechdel.graph1 <- bechdel %>%
filter(year == 2000) %>%
ggplot() +
geom_bar(aes( x = binary))
bechdel.graph1
